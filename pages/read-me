{
  "title": "Read Me",
  "journal": [
    {
      "id": "65833c41a7d1437f",
      "type": "create",
      "item": {
        "title": "Read Me"
      }
    }
  ],
  "story": [
    {
      "text": "Here we reformat minimal HTML to JSON and publish it as an instance of the Smallest Federated Wiki.",
      "id": "0cfe7b2b7e521836",
      "type": "paragraph"
    },
    {
      "text": "This script is a modificatiion of the one Ward Cunningham used to translate the patterns of practice files from XHTML to JSON. ",
      "id": "84174e7021f57c71",
      "type": "paragraph"
    },
    {
      "text": "The script html-json.rb will translate a minimally processed set of text files into pages suitable for SFW as well as a summary (index) page. It requires properly formatted html input, but doesn't need much refinement. It processes paragraphs and images only. It will optionally tranform either bold or italic text into wiki links. So &lt;b&gt;foo&lt;/b&gt; becomes [[foo]], for example. ",
      "id": "83110e1e7a04c222",
      "type": "paragraph"
    },
    {
      "text": "If you already have correctly formatted html files, you don't need to do anything except attend to the filenames so you get the page titles you desire. You should rename the file so that it's filename is a captialized bumpy word with an html extension. For example mumblefoo.txt might become MumbleFoo.html before processing. The page title will then be Mumble Foo.  ",
      "id": "3bec384d0bb70a5e",
      "type": "paragraph"
    },
    {
      "text": "The script is intended to be run from the scripts folder. The script has three arguments. -b will transform text within bold tags into wiki links. -i will transform italic tags into links. If you use both it will work, unless you have text that is both bold and italic. Then the [[ ... ]] will be added twice. It will work, but look ugly.",
      "id": "6ebbb100d641e467",
      "type": "paragraph"
    },
    {
      "text": "If you use the -t argument, then the following arg is a string with the title of the summary page. If you don't want a summary, use -t '' as an argument pair. ",
      "id": "512b383bb52baae1",
      "type": "paragraph"
    },
    {
      "text": "The script reads a set of files from ./scripts/originals and produces its output into ../pages (which must exist). The summary, if any, is also placed there. The originals are not modified. ",
      "id": "ceea8b3d53ffb141",
      "type": "paragraph"
    },
    {
      "text": "&lt;hr/&gt;",
      "id": "9d66ab92e566aca1",
      "type": "paragraph"
    },
    {
      "text": "If you have a straight text file to process, do this first. Use markdown (http://daringfireball.net/projects/markdown/) to add paragraph markers, or do it by hand. Markdown transforms doubled newlines into paragraph breaks and correctly formats them. Assure that your img tags are correctly fomatted (strict): &lt;img src=\"mumble.gif\"/&gt;. Add &lt;html&gt;&lt;body&gt; to the beginning and &lt;/body&gt;&lt;/html&gt; to the end. The file should now be ok for this script to process. Don't bother with any other markdown options than blank lines, or the produced html will not work well in the wiki. Code fragments might be ok, though. ",
      "id": "c38eda4191a2e576",
      "type": "paragraph"
    },
    {
      "text": "&lt;pre&gt;\n    begin\n        mumble\n    end\n&lt;/pre&gt;",
      "id": "ed37b386c0a2afe2",
      "type": "paragraph"
    }
  ]
}